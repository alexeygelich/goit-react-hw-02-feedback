{"version":3,"sources":["components/Statistics/index.js","components/Statistics/Statistics.jsx","components/FeedbackOptions/index.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/index.js","components/Section/Section.jsx","components/Notification/index.js","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","className","styles","button","type","onClick","Section","title","children","Notification","message","App","state","PositivePercentage","counter","e","key","target","textContent","toLowerCase","setState","countTotalFeedback","countPositiveFeedbackPercentage","prevState","Math","round","this","Component","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oRAEeA,G,MCEI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,a,gBCRWC,ECES,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,qCACE,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAASL,EAAzD,kBAGA,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAASL,EAAzD,qBAGA,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAASL,EAAzD,qBCVWM,ECEC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCLUC,ECEM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGT,UAAU,sBAAb,SAAoCS,KCChCC,E,4MAKJC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPgB,mBAAoB,G,EAGtBC,QAAU,SAAAC,GACR,IAAIC,EAAMD,EAAEE,OAAOC,YAAYC,cAC/B,EAAKC,SAAL,eAAiBJ,EAAM,EAAKJ,MAAMI,GAAO,IACzC,EAAKK,qBACL,EAAKC,mC,EAGPD,mBAAqB,kBAAM,EAAKD,SAAS,CAAEvB,MAAO,EAAKe,MAAMf,MAAQ,K,EACrEyB,gCAAkC,kBAChC,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BV,mBAAoBW,KAAKC,MAAwB,IAAjBF,EAAU7B,KAAc6B,EAAU1B,Y,uDAG5D,IAAD,EACmD6B,KAAKd,MAAvDlB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOgB,EAD5B,EAC4BA,mBACnC,OACE,qCACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,gBAAiB0B,KAAKZ,YAIzBY,KAAKd,MAAMf,MAAQ,EAClB,cAAC,EAAD,CAASU,MAAM,aAAf,SACE,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBe,MAIxB,cAAC,EAAD,CAAcH,QAAQ,6B,GA/CdiB,aAAZhB,EACGiB,aAAe,GAqDTjB,QChDAkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K,kBCZAc,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.35b98785.chunk.js","sourcesContent":["import Statistics from './Statistics';\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive Feedback: {positivePercentage} %</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import FeedbackOptions from './FeedbackOptions';\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <>\n    <button className={styles.button} type=\"button\" onClick={onLeaveFeedback}>\n      Good\n    </button>\n    <button className={styles.button} type=\"button\" onClick={onLeaveFeedback}>\n      Neutral\n    </button>\n    <button className={styles.button} type=\"button\" onClick={onLeaveFeedback}>\n      Bad\n    </button>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import Section from './Section';\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './Section.styles';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import Notification from './Notification';\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './Notification.styles';\n\nconst Notification = ({ message }) => (\n  <p className=\"NotificationWrapper\">{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    PositivePercentage: 0,\n  };\n\n  counter = e => {\n    let key = e.target.textContent.toLowerCase();\n    this.setState({ [key]: this.state[key] + 1 });\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  countTotalFeedback = () => this.setState({ total: this.state.total + 1 });\n  countPositiveFeedbackPercentage = () =>\n    this.setState(prevState => ({\n      PositivePercentage: Math.round((prevState.good * 100) / prevState.total),\n    }));\n\n  render() {\n    const { good, neutral, bad, total, PositivePercentage } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.counter}\n          />\n        </Section>\n\n        {this.state.total > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={PositivePercentage}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};"],"sourceRoot":""}